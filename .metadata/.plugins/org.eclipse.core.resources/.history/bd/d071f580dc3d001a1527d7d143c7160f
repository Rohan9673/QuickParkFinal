package com.quickpark.in.dao;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.TransactionDefinition;
import org.springframework.transaction.TransactionStatus;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.transaction.support.DefaultTransactionDefinition;

import com.quickpark.in.model.PropOwner;

@Repository
public class PropOwnerDaoImple implements PropOwnerDao{

	//@Autowired
	//private JdbcTemplate jt;
	
	//public void setJt(JdbcTemplate jt) {
		//this.jt = jt;
	//}
	private DataSource dataSource;
	   private JdbcTemplate jdbcTemplateObject;
	   private PlatformTransactionManager transactionManager;


	 public void setDataSource(DataSource dataSource) {
	      this.dataSource = dataSource;
	      this.jdbcTemplateObject = new JdbcTemplate(dataSource);
	   }
	   public void setTransactionManager(PlatformTransactionManager transactionManager) {
	      this.transactionManager = transactionManager;
	   }

	     
	@Override
	@Transactional
	public boolean add(PropOwner owner) {
		
		 TransactionDefinition def = new DefaultTransactionDefinition();
	      TransactionStatus status = transactionManager.getTransaction(def);

		try {
		String sql1="insert into master values(?,?,?)";	
		String sql= "insert into PropOwner(FirstName,LastName,MobNo,Address,EmailId,Password,userName) values(?,?,?,?,?,?,?)";
			
	int k=jdbcTemplateObject.update(sql1,new Object[]{
		owner.getUserName(),
		owner.getPassword(),
		owner.getRole()
	});
	
		
		int i=jdbcTemplateObject.update(sql, new Object[] {
				owner.getFirstName(),
				owner.getLastName(),
				owner.getMobNo(),
				owner.getaddress(),
				owner.getEmailID(),	
				owner.getPassword(),
				owner.getUserName()
						
				
		});
		}catch(Exception e) {
			System.out.println("jyg");
		}
		return true;
	}

	
}
